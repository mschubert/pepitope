[{"path":[]},{"path":"/articles/qc.html","id":"sequencing-output","dir":"Articles","previous_headings":"Preparation","what":"Sequencing output","title":"Quality control","text":"workflow, need single FASTQ file can contain multiple samples. example, simulating reads, usually file produced sequencing pooled barcode-labeled samples:","code":"fastq_file = \"/path/to/your/file.fq.gz\"  # here we don't have sequencing data so we simulate the reads instead: fastq_file = sim_fastq() #> Rows: 6 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (4): sample_id, patient, origin, barcode #> dbl (1): rep #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 119 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (10): var_id, mut_id, gene_name, gene_id, tx_id, pep_type, pep_id, tiled... #> dbl  (3): n_tiles, nt, BbsI_replaced #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"/articles/qc.html","id":"creating-a-sample-sheet","dir":"Articles","previous_headings":"Preparation","what":"Creating a sample sheet","title":"Quality control","text":"can start working FASTQ sequencing output, need describe samples contains. , create sample sheet following columns: sample_id – unique identifier sample patient – patient sample group sample comes rep – number indicating replicate number origin – descriptor kind sample barcode – barcode used label condition-specific constructs sequencing data example, already provided sample sheet package:","code":"sample_sheet = system.file(\"my_samples.tsv\", package=\"pepitope\") #> Rows: 6 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (4): sample_id, patient, origin, barcode #> dbl (1): rep #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":[]},{"path":"/articles/qc.html","id":"feature-syntax","dir":"Articles","previous_headings":"Sample demultiplexing","what":"Feature syntax","title":"Quality control","text":"step using fqtk toolkit split multi-sample FASTQ file individual sample files, separated sample barcode save temporary directory. , read_structures describes split samples. following possible fields, preceded number nucleotides read. + instead number used indicated use remaining nucleotides: B – sample barcode split (required) T – read sequence construct barcode sequence (required) S – skip nucleotides include output (optional)","code":""},{"path":"/articles/qc.html","id":"demultiplexing-call","dir":"Articles","previous_headings":"Sample demultiplexing","what":"Demultiplexing call","title":"Quality control","text":"example, using 7-nucleotide barcode samples keep rest read: can perform additional quality control steps sample-level FASTQ files, e.g. using fastqc multiqc (included package).","code":"temp_dir = demux_fq(fastq_file, sample_sheet, read_structures=\"7B+T\")"},{"path":[]},{"path":"/articles/qc.html","id":"working-with-the-full-construct-barcode-library","dir":"Articles","previous_headings":"Construct barcode counting","what":"Working with the full construct barcode library","title":"Quality control","text":"order count barcodes constructs, well assess potential contaminations samples, need provide list possible barcodes. , using barcodes publication Github repository:","code":"lib = \"https://raw.githubusercontent.com/hawkjo/freebarcodes/master/barcodes/barcodes12-1.txt\" valid_barcodes = readr::read_tsv(lib, col_names=FALSE)$X1 #> Rows: 17214 Columns: 1 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (1): X1 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"/articles/qc.html","id":"counting-construct-barcodes","dir":"Articles","previous_headings":"Construct barcode counting","what":"Counting construct barcodes","title":"Quality control","text":"next step count construct barcodes individual FASTQ file demultiplexing. Internally, use guide-counter tool identify position construct barcodes occur library reads subsequently count number occurrences. pass directory containing demultiplexed FASTQ files barcode library file possible (used) barcodes: , dset list two objects: meta – data.frame sample read information rows counts – matrix constructs rows samples columns","code":"dset = count_bc(temp_dir, sample_sheet, valid_barcodes) #> Rows: 17214 Columns: 9 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): guide, gene #> dbl (7): lib1.R1, lib2.R1, mock1.R1, mock2.R1, screen1.R1, screen2.R1, unmat... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 7 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr  (2): file, label #> dbl (10): total_guides, total_reads, mapped_reads, frac_mapped, mean_reads_p... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 6 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (4): sample_id, patient, origin, barcode #> dbl (1): rep #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Joining with `by = join_by(sample_id)`"},{"path":"/articles/qc.html","id":"merging-with-construct-info","dir":"Articles","previous_headings":"Construct barcode counting","what":"Merging with construct info","title":"Quality control","text":"step, add information barcode belongs sample construct. can use multiple barcode annotation files, required every construct barcodes occurs one sample construct:","code":"peptides = system.file(\"my_peptides.tsv\", package=\"pepitope\") |>     readr::read_tsv() |>     dplyr::mutate(bc_type = \"pat1\") #> Rows: 119 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (10): var_id, mut_id, gene_name, gene_id, tx_id, pep_type, pep_id, tiled... #> dbl  (3): n_tiles, nt, BbsI_replaced #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.  reps = calc_representation(dset$counts, peptides, dset$meta) #> Joining with `by = join_by(barcode)` #> Joining with `by = join_by(sample_id)`"},{"path":[]},{"path":"/articles/qc.html","id":"plotting-total-barcode-counts","dir":"Articles","previous_headings":"Quality Control plots","what":"Plotting total barcode counts","title":"Quality control","text":"first overview want get know many barcodes demultiplexed FASTQ, whether match sample expect . can plot following way, total read counts left number barcodes 10 reads right:  can also plot interactively plotly:","code":"plot_reads(reps, dset$meta) library(plotly) #> Loading required package: ggplot2 #>  #> Attaching package: 'plotly' #> The following object is masked from 'package:ggplot2': #>  #>     last_plot #> The following object is masked from 'package:stats': #>  #>     filter #> The following object is masked from 'package:graphics': #>  #>     layout plot = plot_reads(reps, dset$meta) subplot(ggplotly(plot[[1]]), ggplotly(plot[[2]]), nrows=1)"},{"path":"/articles/qc.html","id":"representation-of-individual-barcodes","dir":"Articles","previous_headings":"Quality Control plots","what":"Representation of individual barcodes","title":"Quality control","text":"next question want ask whether individual construct barcodes equally distributed within sample, potential contaminations come . , order barcodes least abundant (left) abundant (right) plot continuous line many reads sequenced barcode y axis:  perflectly balanced library expect horizonal line stays constant. , however, impossible reach due sampling process obtains reads stochastically. plot sampled near-perfect library, distribution best can expect. can also plot interactively plotly, can hover mouse see barcode position exactly:","code":"plot_distr(reps) library(plotly) ggplotly(plot_distr(reps), height=800)"},{"path":"/articles/screen.html","id":"section","dir":"Articles","previous_headings":"","what":"Section","title":"Co-culture screen","text":"text","code":"#install.packages(\"clustermq\") # code"},{"path":[]},{"path":"/articles/variant.html","id":"selecting-the-right-reference-genome","dir":"Articles","previous_headings":"Preparation","what":"Selecting the right reference genome","title":"Variant calling","text":"variant calling RNA-seq counts mapped reference genome gene annotations. important keep consistent NF-core processing pipelines Minigene Library annotation. usually working BSgenome (reference genome) EnsDb (gene annotations) objects. human data, widely used reference genome GRCh38, recent Ensembl annotation release. test data, know GRCh38 correct reference genome Ensembl 106 correct version gene annotations. can get objects BSgenome AnnotationHub Bioconductor packages, respectively. caveat chromosome prefixes need consistent variants VCF file genome/gene annotations. two “styles”, either UCSC (includes “chr” prefix) NCBI/Ensembl (without “chr” prefix). sarek pipline uses UCSC prefixes GRCh38 genome, need switch genome gene annotation styles: correct styles depend VCF files generated.","code":"ens106 = AnnotationHub::AnnotationHub()[[\"AH100643\"]] #> loading from cache #> require(\"ensembldb\") asm = BSgenome.Hsapiens.NCBI.GRCh38::BSgenome.Hsapiens.NCBI.GRCh38 seqlevelsStyle(ens106) = \"UCSC\" seqlevelsStyle(asm) = \"UCSC\" asm@seqinfo@genome[] = \"GRCh38\""},{"path":"/articles/variant.html","id":"adding-rna-expression","dir":"Articles","previous_headings":"Preparation","what":"Adding RNA expression","title":"Variant calling","text":"NF-core rnaseq workflow provide two gene expression files, one raw read counts one transcripts per million (TPM). contain samples run, need subset current sample interested . files usually called: salmon.merged.gene_counts.tsv salmon.merged.gene_tpm.tsv can combine subset following way:","code":"# note that this is not run in this example because we don't have RNA-seq data counts = readr::read_tsv(\"salmon.merged.gene_counts.tsv\") |>     dplyr::select(gene_id, gene_name, count=SAMPLE) tpm = readr::read_tsv(\"salmon.merged.gene_tpm.tsv\") |>     dplyr::select(gene_id, gene_name, tpm=SAMPLE)  rna_sample = inner_join(counts, tpm)"},{"path":[]},{"path":"/articles/variant.html","id":"reading-and-filtering-mutations","dir":"Articles","previous_headings":"SNPs and small indels","what":"Reading and filtering mutations","title":"Variant calling","text":", using following filters: min_cov=2 – variant needs covered least 2 reads min_af=0.05 – variant needs occur leat 5% reads pass=TRUE – variant needs pass standard QC filters resulting vr1 object looks like following:","code":"vr1 = readVcfAsVRanges(variant_vcf_file) |>     filter_variants(min_cov=2, min_af=0.05, pass=TRUE)"},{"path":"/articles/variant.html","id":"annotating-and-subsetting-expressed-variants","dir":"Articles","previous_headings":"SNPs and small indels","what":"Annotating and subsetting expressed variants","title":"Variant calling","text":", using following filters: min_reads=1 – gene needs least one RNA read min_tpm=0 – apply additional TPM filter addition, set region interest (context) 15 codons - downstream variant. Hence, SNP total length 93 nucleotides (15*3 + SNP codon ). insertion inserted sequence 15 codons, deletion 15 codons sides. frameshift 15 codons upstream entire sequence downstream STOP codon reached. latter may extend 3’ UTR. subs dataframe looks like following:","code":"ann = annotate_coding(vr1, ens106, asm) subs = ann |> #    filter_expressed(rna_sample, min_reads=1, min_tpm=0) |>     subset_context(15)"},{"path":[]},{"path":"/articles/variant.html","id":"reading-a-fusion-vcf","dir":"Articles","previous_headings":"Fusion genes from RNA-seq","what":"Reading a fusion VCF","title":"Variant calling","text":"First want read fusion genes combined vcf file like one produced rnafusion NF-core pipeline: , using following filters: min_reads=2 – fusion needs supported 2 split pair distance reads min_split_reads=1 – fusion needs supported least one split read min_tools=1 – fusion needs reported least one tool","code":"vr2 = readVcfAsVRanges(fusion_vcf_file) |>     filter_fusions(min_reads=2, min_split_reads=1, min_tools=1)  seqlevelsStyle(vr2) = \"UCSC\""},{"path":"/articles/variant.html","id":"annotating-fusion-genes","dir":"Articles","previous_headings":"Fusion genes from RNA-seq","what":"Annotating fusion genes","title":"Variant calling","text":"Next, subset peptide context analogous SNPs: fus table looks like following:","code":"fus = annotate_fusions(vr2, ens106, asm) |>     subset_context_fusion(15)"},{"path":[]},{"path":"/articles/variant.html","id":"tiling-cdnas-of-interest-into-smaller-peptides","dir":"Articles","previous_headings":"Generating the Minigene Library","what":"Tiling cDNAs of interest into smaller peptides","title":"Variant calling","text":"tiled peptide table looks like following:","code":"tiled = pep_tile(subs) |>     remove_cutsite(BbsI=\"GAAGAC\")"},{"path":"/articles/variant.html","id":"saving-the-report-file","dir":"Articles","previous_headings":"Generating the Minigene Library","what":"Saving the report file","title":"Variant calling","text":"can combine generated tables report save writexl package. can include tables listed : .xlsx file contain different tables sheets. use annotation file quality control screen steps.","code":"report = make_report(ann, subs, fus, tiled) writexl::write_xlsx(report, \"report_file.xlsx\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Schubert. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schubert M (2025). pepitope: Extract peptide context around mutations VCF. R package version 0.2.920, https://github.com/mschubert/pepitope.","code":"@Manual{,   title = {pepitope: Extract the peptide context around mutations in a VCF},   author = {Michael Schubert},   year = {2025},   note = {R package version 0.2.920},   url = {https://github.com/mschubert/pepitope}, }"},{"path":"/index.html","id":"pepitope-extract-peptide-epitopes","dir":"","previous_headings":"","what":"Extract the peptide context around mutations in a VCF","title":"Extract the peptide context around mutations in a VCF","text":"R package extract peptide context (flanking region around mutations) reference genome variant (VCF) file. peptide context defined - downstream around following: SNPs, insertions, deletions: codons affected frameshifts: codon frameshift first stop codon","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extract the peptide context around mutations in a VCF","text":"package currently available Github, use theremotes package install:","code":"remotes::install_github(\"mschubert/pepitope\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Extract the peptide context around mutations in a VCF","text":"pepitope workflow usually consists : Loading genome annotation, usually GRCh38 Ensembl Loading VCF variants file VRanges object Annotate protein-coding mutations Make report variants, coding changes, tiled peptides code, looks like following:","code":"library(pepitope)  # genome and annotation ens106 = AnnotationHub::AnnotationHub()[[\"AH100643\"]] asm = BSgenome.Hsapiens.NCBI.GRCh38::BSgenome.Hsapiens.NCBI.GRCh38  # read variants from VCF file and apply filters vr = readVcfAsVRanges(\"my_variants.vcf.gz\") |>     filter_variants(min_cov=2, min_af=0.05, pass=TRUE)  # annotate and create report ann = annotate_coding(vr, ens106, asm)  report = make_report(ann, ctx_codons=15) # writexl::write_xlsx(report, \"my_variants.xlsx\")"},{"path":"/reference/add_gex.html","id":null,"dir":"Reference","previous_headings":"","what":"Add gene expression values to variant result — add_gex","title":"Add gene expression values to variant result — add_gex","text":"Add gene expression values variant result","code":""},{"path":"/reference/add_gex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add gene expression values to variant result — add_gex","text":"","code":"add_gex(res, rec)"},{"path":"/reference/add_gex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add gene expression values to variant result — add_gex","text":"res Annotated variants `annotate_coding()` rec Sample record config file","code":""},{"path":"/reference/add_gex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add gene expression values to variant result — add_gex","text":"Annotated variants including gene counts TPM","code":""},{"path":"/reference/add_seq_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds sequence information to break transcripts — add_seq_info","title":"Adds sequence information to break transcripts — add_seq_info","text":"Adds sequence information break transcripts","code":""},{"path":"/reference/add_seq_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds sequence information to break transcripts — add_seq_info","text":"","code":"add_seq_info(gr, cds_break, asm, txdb, tx)"},{"path":"/reference/add_seq_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds sequence information to break transcripts — add_seq_info","text":"gr GenomicRanges object break location cds_break list transcripts overlapping break `cds_by_break` asm Genome sequence package object, eg. ::BSgenome.Hsapiens.NCBI.GRCh38 txdb transcription database, eg. AnnotationHub()[[\"AH100643\"]] tx list transcripts obtained `transcripts(txdb)`","code":""},{"path":"/reference/add_seq_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds sequence information to break transcripts — add_seq_info","text":"DataFrame sequence information","code":""},{"path":"/reference/annotate_coding.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate VCF variants with coding changes — annotate_coding","title":"Annotate VCF variants with coding changes — annotate_coding","text":"Annotate VCF variants coding changes","code":""},{"path":"/reference/annotate_coding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate VCF variants with coding changes — annotate_coding","text":"","code":"annotate_coding(vr, txdb, asm)"},{"path":"/reference/annotate_coding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate VCF variants with coding changes — annotate_coding","text":"vr VRanges object SNVs small indels txdb TxDb EnsDb object asm Genomic sequence BSGenome object","code":""},{"path":"/reference/annotate_coding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate VCF variants with coding changes — annotate_coding","text":"GRanges object annotated variants","code":""},{"path":"/reference/annotate_fusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate fusion VCFs into a table — annotate_fusions","title":"Aggregate fusion VCFs into a table — annotate_fusions","text":"Aggregate fusion VCFs table","code":""},{"path":"/reference/annotate_fusions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate fusion VCFs into a table — annotate_fusions","text":"","code":"annotate_fusions(vr, txdb, asm)"},{"path":"/reference/annotate_fusions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate fusion VCFs into a table — annotate_fusions","text":"vr VRanges object RNA fusions readVcfAsRanges txdb transcription database, eg. AnnotationHub()[[\"AH100643\"]] asm Genome sequence package object, eg. ::BSgenome.Hsapiens.NCBI.GRCh38","code":""},{"path":"/reference/annotate_fusions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate fusion VCFs into a table — annotate_fusions","text":"DataFrame objects fusions","code":""},{"path":"/reference/calc_de.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate differential abundance of construct barcodes — calc_de","title":"Calculate differential abundance of construct barcodes — calc_de","text":"Calculate differential abundance construct barcodes","code":""},{"path":"/reference/calc_de.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate differential abundance of construct barcodes — calc_de","text":"","code":"calc_de(eset, cfg)"},{"path":"/reference/calc_de.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate differential abundance of construct barcodes — calc_de","text":"eset DESeq2 object cfg outdated","code":""},{"path":"/reference/cds_by_break.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of transcripts with their CDS exons overlapping the break — cds_by_break","title":"Get a list of transcripts with their CDS exons overlapping the break — cds_by_break","text":"Get list transcripts CDS exons overlapping break","code":""},{"path":"/reference/cds_by_break.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of transcripts with their CDS exons overlapping the break — cds_by_break","text":"","code":"cds_by_break(gr, txdb, cds, type = \"left\")"},{"path":"/reference/cds_by_break.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of transcripts with their CDS exons overlapping the break — cds_by_break","text":"gr GenomicRanges object break location txdb transcription database, eg. AnnotationHub()[[\"AH100643\"]] cds list exon coordinates gene `cdsBy(txdb)` type Whether want info 'left' 'right' side break","code":""},{"path":"/reference/cds_by_break.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of transcripts with their CDS exons overlapping the break — cds_by_break","text":"named list transcript GRanges objects CDS exons","code":""},{"path":"/reference/check_silent.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust offsets for variants that start/end silently (no AA change) — check_silent","title":"Adjust offsets for variants that start/end silently (no AA change) — check_silent","text":"Adjust offsets variants start/end silently (AA change)","code":""},{"path":"/reference/check_silent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust offsets for variants that start/end silently (no AA change) — check_silent","text":"","code":"check_silent(ref, alt)"},{"path":"/reference/check_silent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust offsets for variants that start/end silently (no AA change) — check_silent","text":"ref Reference amino acid sequence alt Alternative amino acid sequence","code":""},{"path":"/reference/check_silent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust offsets for variants that start/end silently (no AA change) — check_silent","text":"integer vector offsets","code":""},{"path":"/reference/count_bc.html","id":null,"dir":"Reference","previous_headings":"","what":"Count barcodes using guide-counter — count_bc","title":"Count barcodes using guide-counter — count_bc","text":"Count barcodes using guide-counter","code":""},{"path":"/reference/count_bc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count barcodes using guide-counter — count_bc","text":"","code":"count_bc(tdir, samples, valid_barcodes, reverse_complement = FALSE)"},{"path":"/reference/count_bc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count barcodes using guide-counter — count_bc","text":"tdir Path directory demultiplexed FASTQ files samples path data.frame containing sample sheet valid_barcodes character vector possible barcodes reverse_complement Whether count reverse complement barcodes instead","code":""},{"path":"/reference/count_bc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count barcodes using guide-counter — count_bc","text":"list data.frame meta matrix counts","code":""},{"path":"/reference/demux_fq.html","id":null,"dir":"Reference","previous_headings":"","what":"Use fqtk tool to demultiplex fastq files — demux_fq","title":"Use fqtk tool to demultiplex fastq files — demux_fq","text":"Use fqtk tool demultiplex fastq files","code":""},{"path":"/reference/demux_fq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use fqtk tool to demultiplex fastq files — demux_fq","text":"","code":"demux_fq(fq, samples, read_structures)"},{"path":"/reference/demux_fq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use fqtk tool to demultiplex fastq files — demux_fq","text":"fq path fastq file demultiplex samples sample sheet tsv format read_structures character string describing read structure","code":""},{"path":"/reference/extract_fusion_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a fusion VRanges object to left (5') and right (3') GRanges objects — extract_fusion_ranges","title":"Convert a fusion VRanges object to left (5') and right (3') GRanges objects — extract_fusion_ranges","text":"Convert fusion VRanges object left (5') right (3') GRanges objects","code":""},{"path":"/reference/extract_fusion_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a fusion VRanges object to left (5') and right (3') GRanges objects — extract_fusion_ranges","text":"","code":"extract_fusion_ranges(vr)"},{"path":"/reference/extract_fusion_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a fusion VRanges object to left (5') and right (3') GRanges objects — extract_fusion_ranges","text":"vr VRanges object RNA fusions `readVcfAsVRanges`","code":""},{"path":"/reference/extract_fusion_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a fusion VRanges object to left (5') and right (3') GRanges objects — extract_fusion_ranges","text":"list 5' 3' GRanges objects","code":""},{"path":"/reference/filter_fusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a fusion VRanges object by number of reads and tools — filter_fusions","title":"Filter a fusion VRanges object by number of reads and tools — filter_fusions","text":"Filter fusion VRanges object number reads tools","code":""},{"path":"/reference/filter_fusions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a fusion VRanges object by number of reads and tools — filter_fusions","text":"","code":"filter_fusions(vr, min_reads = NULL, min_split_reads = NULL, min_tools = NULL)"},{"path":"/reference/filter_fusions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a fusion VRanges object by number of reads and tools — filter_fusions","text":"vr VRanges object RNA fusions readVcfAsRanges min_reads minimum number linked read support fusion min_split_reads minimum number split read support fusion min_tools minimum number tools identify fusion","code":""},{"path":"/reference/filter_fusions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a fusion VRanges object by number of reads and tools — filter_fusions","text":"filtered VRanges object","code":""},{"path":"/reference/filter_proper_orf.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset sequence vector to proper ORFs — filter_proper_orf","title":"Subset sequence vector to proper ORFs — filter_proper_orf","text":"Subset sequence vector proper ORFs","code":""},{"path":"/reference/filter_proper_orf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset sequence vector to proper ORFs — filter_proper_orf","text":"","code":"filter_proper_orf(x)"},{"path":"/reference/filter_variants.html","id":null,"dir":"Reference","previous_headings":"","what":"Make results report to save as xlsx sheets (full, filtered, peptides) — filter_variants","title":"Make results report to save as xlsx sheets (full, filtered, peptides) — filter_variants","text":"Make results report save xlsx sheets (full, filtered, peptides)","code":""},{"path":"/reference/filter_variants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make results report to save as xlsx sheets (full, filtered, peptides) — filter_variants","text":"","code":"filter_variants(   vr,   ...,   min_cov = 2,   min_af = 0.05,   pass = TRUE,   sample = NULL,   chrs = NULL )"},{"path":"/reference/filter_variants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make results report to save as xlsx sheets (full, filtered, peptides) — filter_variants","text":"vr VRanges object `readVcfAsVRanges` ... Force filters name (ignored) min_cov Minimum number reads span ALT allele min_af Minimum allele frequency ALT allele pass Whether include softFilterMatrix PASS sample include `sampleNames(vr)` chrs Either \"default\" character vector chromosome names","code":""},{"path":"/reference/get_coding_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the alternative coding sequence of a variant or gene fusion — get_coding_seq","title":"Get the alternative coding sequence of a variant or gene fusion — get_coding_seq","text":"takes account (newly introduced) STOP codons UTR readthroughs","code":""},{"path":"/reference/get_coding_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the alternative coding sequence of a variant or gene fusion — get_coding_seq","text":"","code":"get_coding_seq(asm, txdb, ..., include_stop = TRUE)"},{"path":"/reference/get_coding_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the alternative coding sequence of a variant or gene fusion — get_coding_seq","text":"asm Genomic sequence BSGenome object txdb transcription database, eg. AnnotationHub()[[\"AH100643\"]] ... named DNAStringSet objects row translated consecutively include_stop Whether include STOP codon","code":""},{"path":"/reference/get_coding_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the alternative coding sequence of a variant or gene fusion — get_coding_seq","text":"merged DNAStringSet object translated nucleotides","code":""},{"path":"/reference/is_proper_orf.html","id":null,"dir":"Reference","previous_headings":"","what":"Logical vector whether sequence has START and STOP codon — is_proper_orf","title":"Logical vector whether sequence has START and STOP codon — is_proper_orf","text":"Logical vector whether sequence START STOP codon","code":""},{"path":"/reference/is_proper_orf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logical vector whether sequence has START and STOP codon — is_proper_orf","text":"","code":"is_proper_orf(x)"},{"path":"/reference/is_proper_orf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logical vector whether sequence has START and STOP codon — is_proper_orf","text":"x DNAStringSet AAStringSet object","code":""},{"path":"/reference/make_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up a differential abundance result — make_clean","title":"Clean up a differential abundance result — make_clean","text":"Clean differential abundance result","code":""},{"path":"/reference/make_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up a differential abundance result — make_clean","text":"","code":"make_clean(res, sample, cap_fc = 3)"},{"path":"/reference/make_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up a differential abundance result — make_clean","text":"res DESeq2 results object sample sample name cap_fc absolute limit log2 fold change","code":""},{"path":"/reference/make_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up a differential abundance result — make_clean","text":"cleaned results object","code":""},{"path":"/reference/make_pep_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a peptide .tsv in the inst directory — make_pep_table","title":"Create a peptide .tsv in the inst directory — make_pep_table","text":"Create peptide .tsv inst directory","code":""},{"path":"/reference/make_pep_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a peptide .tsv in the inst directory — make_pep_table","text":"","code":"make_pep_table(outfile)"},{"path":"/reference/make_pep_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a peptide .tsv in the inst directory — make_pep_table","text":"outfile file save peptide table ","code":""},{"path":"/reference/make_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a variants report as named list of tables — make_report","title":"Make a variants report as named list of tables — make_report","text":"Make variants report named list tables","code":""},{"path":"/reference/make_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a variants report as named list of tables — make_report","text":"","code":"make_report(vars, fus = DataFrame(), ..., ctx_codons)"},{"path":"/reference/make_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a variants report as named list of tables — make_report","text":"vars Variant results fus Fusion results ... Parameters passed `pep_tile` (eg. tile_size, tile_ov) ctx_codons Number codonds sequence context","code":""},{"path":"/reference/pep_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Tile cDNA into peptide sequences — pep_tile","title":"Tile cDNA into peptide sequences — pep_tile","text":"Tile cDNA peptide sequences","code":""},{"path":"/reference/pep_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tile cDNA into peptide sequences — pep_tile","text":"","code":"pep_tile(subs, tile_size = 93, tile_ov = 45)"},{"path":"/reference/pep_tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tile cDNA into peptide sequences — pep_tile","text":"subs GRanges object context-subset protein-coding variants tile_size Oligo tiling size tile_ov Oligo tiling overlap","code":""},{"path":"/reference/pepitope.html","id":null,"dir":"Reference","previous_headings":"","what":"Pepitope: peptide epitopes from reference genome and variant (VCF) file — pepitope","title":"Pepitope: peptide epitopes from reference genome and variant (VCF) file — pepitope","text":"Given reference genome VCF file, package provide upstream/downstream peptide context variant. generate summary report protein-coding variants including reference mutated allele, read coverage, amino acid sequence, information. can also used remove restriction sites cDNA, alongside helper functions.","code":""},{"path":[]},{"path":"/reference/pepitope.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pepitope: peptide epitopes from reference genome and variant (VCF) file — pepitope","text":"Maintainer: Michael Schubert mschu.dev@gmail.com (ORCID)","code":""},{"path":"/reference/plot_genomic_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Genomic track plot for variant + transcripts + RNA-seq — plot_genomic_context","title":"Genomic track plot for variant + transcripts + RNA-seq — plot_genomic_context","text":"Genomic track plot variant + transcripts + RNA-seq","code":""},{"path":"/reference/plot_genomic_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genomic track plot for variant + transcripts + RNA-seq — plot_genomic_context","text":"","code":"plot_genomic_context(rec, gene_id, res, gene, txdb)"},{"path":"/reference/plot_genomic_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Genomic track plot for variant + transcripts + RNA-seq — plot_genomic_context","text":"rec record gene_id gene id res results object gene gene name txdb txdb object","code":""},{"path":"/reference/plot_genomic_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Genomic track plot for variant + transcripts + RNA-seq — plot_genomic_context","text":"plot","code":""},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. VariantAnnotation readVcfAsVRanges","code":""},{"path":"/reference/remove_cutsite.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a Restriction Enzyme cut site but keep AA in a tiled peptide data.frame — remove_cutsite","title":"Remove a Restriction Enzyme cut site but keep AA in a tiled peptide data.frame — remove_cutsite","text":"Remove Restriction Enzyme cut site keep AA tiled peptide data.frame","code":""},{"path":"/reference/remove_cutsite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a Restriction Enzyme cut site but keep AA in a tiled peptide data.frame — remove_cutsite","text":"","code":"remove_cutsite(pep, ...)"},{"path":"/reference/remove_cutsite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a Restriction Enzyme cut site but keep AA in a tiled peptide data.frame — remove_cutsite","text":"pep data.frame tiled peptides ... Named argumennts cut sites, e.g. `BbsI=\"GAAGAC\"`","code":""},{"path":"/reference/remove_cutsite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a Restriction Enzyme cut site but keep AA in a tiled peptide data.frame — remove_cutsite","text":"data.frame replace nucleotides number replacements","code":""},{"path":"/reference/remove_cutsite_nuc.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a Restriction Enzyme cut site but keep AA — remove_cutsite_nuc","title":"Remove a Restriction Enzyme cut site but keep AA — remove_cutsite_nuc","text":"Remove Restriction Enzyme cut site keep AA","code":""},{"path":"/reference/remove_cutsite_nuc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a Restriction Enzyme cut site but keep AA — remove_cutsite_nuc","text":"","code":"remove_cutsite_nuc(nuc, site, seed = NULL)"},{"path":"/reference/remove_cutsite_nuc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a Restriction Enzyme cut site but keep AA — remove_cutsite_nuc","text":"nuc cDNA nucleotide string site Recognition site replaced (fwd+rev comp) seed Set random seed select changes multiple runs","code":""},{"path":"/reference/remove_cutsite_nuc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a Restriction Enzyme cut site but keep AA — remove_cutsite_nuc","text":"cDNA minimal changes longer contain cut site","code":""},{"path":"/reference/sim_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate sequencing data and write them to a FASTQ file — sim_fastq","title":"Simulate sequencing data and write them to a FASTQ file — sim_fastq","text":"Simulate sequencing data write FASTQ file","code":""},{"path":"/reference/sim_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate sequencing data and write them to a FASTQ file — sim_fastq","text":"","code":"sim_fastq(sample_sheet, peptide_sheet, target_reads = 1000)"},{"path":"/reference/sim_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate sequencing data and write them to a FASTQ file — sim_fastq","text":"sample_sheet .tsv file containing sample information peptide_sheet .tsv file containing construct information target_reads many reads simulate average","code":""},{"path":"/reference/subset_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset nucleotide/protein sequences to codon +/- 45 bp context — subset_context","title":"Subset nucleotide/protein sequences to codon +/- 45 bp context — subset_context","text":"Subset nucleotide/protein sequences codon +/- 45 bp context","code":""},{"path":"/reference/subset_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset nucleotide/protein sequences to codon +/- 45 bp context — subset_context","text":"","code":"subset_context(codv, ctx_codons)"},{"path":"/reference/subset_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset nucleotide/protein sequences to codon +/- 45 bp context — subset_context","text":"codv Annotated variants `annotate_coding()` ctx_codons many flanking codons include context","code":""},{"path":"/reference/subset_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset nucleotide/protein sequences to codon +/- 45 bp context — subset_context","text":"GRanges object sequence information context","code":""},{"path":"/reference/subset_context_fusion.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset the peptide context for gene fusions — subset_context_fusion","title":"Subset the peptide context for gene fusions — subset_context_fusion","text":"Subset peptide context gene fusions","code":""},{"path":"/reference/subset_context_fusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset the peptide context for gene fusions — subset_context_fusion","text":"","code":"subset_context_fusion(res, ctx_codons)"},{"path":"/reference/subset_context_fusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset the peptide context for gene fusions — subset_context_fusion","text":"res DataFrame object `fusions` ctx_codons many flanking codons include context","code":""},{"path":"/reference/subset_context_fusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset the peptide context for gene fusions — subset_context_fusion","text":"DataFrame object gene fusions","code":""},{"path":"/reference/tx_combine_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine break info from each possible left and right side transcript — tx_combine_breaks","title":"Combine break info from each possible left and right side transcript — tx_combine_breaks","text":"Combine break info possible left right side transcript","code":""},{"path":"/reference/tx_combine_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine break info from each possible left and right side transcript — tx_combine_breaks","text":"","code":"tx_combine_breaks(vr, left, right)"},{"path":"/reference/tx_combine_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine break info from each possible left and right side transcript — tx_combine_breaks","text":"vr VRanges object RNA fusions `readVcfAsVRanges` left List DataFrame objects containing 5' fusion right List DataFrame objects containing 3' fusion","code":""},{"path":"/reference/tx_combine_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine break info from each possible left and right side transcript — tx_combine_breaks","text":"DataFrame fusion coordinates sequence information","code":""},{"path":"/news/index.html","id":"pepitope-02","dir":"Changelog","previous_headings":"","what":"pepitope 0.2","title":"pepitope 0.2","text":"Added support RNA-based gene fusion using rnafusion NF-core pipeline","code":""},{"path":"/news/index.html","id":"pepitope-01","dir":"Changelog","previous_headings":"","what":"pepitope 0.1","title":"pepitope 0.1","text":"Provided simple variant annotation sarek NF-core pipeline","code":""}]
